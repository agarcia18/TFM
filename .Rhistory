shinyApp(ui, server)
# Load required packages
library(shiny)
library(shinydashboard)
library(tidyverse)
library(plotly)
library(DT)
library(shiny)
library(shinyBS)
library(dplyr)
library(shinydashboard)
# javascript code to collapse box
jscode <- "
shinyjs.collapse = function(boxid) {
$('#' + boxid).closest('.box').find('[data-widget=collapse]').click();
}
"
#Design sidebar
sidebar <- dashboardSidebar(width = 225, collapsed=F,
sidebarMenu(id="tabs",
menuItem("zz", tabName = "zz", selected=TRUE)))
#Design body
body <- dashboardBody(shinyjs:::useShinyjs(),
shinyjs:::extendShinyjs(text = jscode),
tabItems(
tabItem(tabName = "zz",
fluidRow(box(actionButton('go','Go', class='btn btn-info', icon=icon('play-circle-o','fg-lg'))),
box(id="B1", collapsible=T, collapsed = T, status = "primary", color="blue", solidHeader = T,
title="Test")))))
Header <- dashboardHeader()
#Show title and the page (includes sidebar and body)
ui <- dashboardPage(Header, sidebar, body)
server <- shinyServer(function(input, output, session){
observeEvent(input$go,{js$collapse("B1")})
})
shinyApp( ui = ui, server = server)
runApp(shinyApp(ui, server))
library(shiny)
library(shinydashboard)
library(shinyjs)
ui <- dashboardPage(
header = dashboardHeader(),
sidebar = dashboardSidebar(
useShinyjs(),
sidebarMenu(
menuItem(
startExpanded = TRUE,
"Menu 1",
column(
width = 12,
actionButton("hideMe", label = "Collapse Me", icon = icon("close"))
)
)
)
),
body = dashboardBody()
)
server <- function(input, output, server){
observeEvent(input$hideMe, {
shinyjs::hide(selector = "ul.menu-open");
})
}
runApp(shinyApp(ui, server))
library(shinyjs)
runApp('Visual_EccDNA')
runApp('Visual_EccDNA')
library(shiny)
library(shinydashboardPlus)
library(shinyjs)
ui <- tags$body(class = "skin-blue sidebar-mini control-sidebar-open", tagList(dashboardPagePlus(
header = dashboardHeaderPlus(
title = "Animals",
enable_rightsidebar = TRUE,
rightSidebarIcon = "paw"
),
body = dashboardBody(useShinyjs()),
rightsidebar = rightSidebar(
uiOutput("rightSidebar") # We'll define this dynamically using renderUI in the server
),
## Left sidebar
sidebar = dashboardSidebar(
sidebarMenu(
id = "sidebarID",
# Cats menu item
menuItem(expandedName = "cats", text = "Cats",
tabName = "cats", icon = icon("cat"),
startExpanded = TRUE,
class = "active",
h4("CAT CONTENT"),
selectInput("catSelector", label = "Select a cat",
choices = c("American Shorthair", "Ragdoll",
"Bengal", "Siamese", "Sphynx"))),
hidden(menuItem("hiddenCats", tabName = "hiddenCats")),
menuItem(expandedName = "dogs", text = "Dogs",
tabName = "dogs", icon = icon("dog"),
class = "active",
h4("DOG CONTENT"),
selectInput("dogSelector", label = "Select a dog",
choices = c("German Shepherd", "Poodle",
"Chihuahua", "Husky", "Pitbull"))),
hidden(menuItem("hiddenDogs", tabName = "hiddenDogs"))
)
)
),
)
)
server <- function(input, output, session){
# RIGHT MENU BAR CONTROLS -------------------------------------------------
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
updateTabItems(session, "sidebarID", selected = "hiddenCats")
}else if(input$sidebarItemExpanded == "dogs"){
updateTabItems(session, "sidebarID", selected = "hiddenDogs")
}
})
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
message("Cats view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar cat content
rightSidebarTabContent(
title = "Cat stuff",
id = "catStuff",
active = T,
icon = "cat",
p("Here is some information about cats.")
)
)
})
}else if(input$sidebarItemExpanded == "dogs"){
message("Dogs view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar dog content
rightSidebarTabContent(
title = "Dog stuff",
id = "dogStuff",
active = T,
icon = "dog",
p("Here is some information about dogs.")
)
)
})
}
})
}
shinyApp(ui = ui, server = server)
ui <- tags$body(class = "skin-blue sidebar-mini control-sidebar-open", tagList(dashboardPagePlus(
header = dashboardHeaderPlus(
title = "Animals",
enable_rightsidebar = TRUE,
rightSidebarIcon = "paw"
),
body = dashboardBody(useShinyjs()),
rightsidebar = rightSidebar(
uiOutput("rightSidebar") # We'll define this dynamically using renderUI in the server
),
## Left sidebar
sidebar = dashboardSidebar(
sidebarMenu(
id = "sidebarID",
# Cats menu item
menuItem(expandedName = "cats", text = "Cats",
tabName = "cats", icon = icon("cat"),
startExpanded = TRUE,
class = "active",
h4("CAT CONTENT"),
selectInput("catSelector", label = "Select a cat",
choices = c("American Shorthair", "Ragdoll",
"Bengal", "Siamese", "Sphynx"))),
hidden(menuItem("hiddenCats", tabName = "hiddenCats")),
menuItem(expandedName = "dogs", text = "Dogs",
tabName = "dogs", icon = icon("dog"),
class = "active",
h4("DOG CONTENT"),
selectInput("dogSelector", label = "Select a dog",
choices = c("German Shepherd", "Poodle",
"Chihuahua", "Husky", "Pitbull"))),
hidden(menuItem("hiddenDogs", tabName = "hiddenDogs"))
)
)
),
)
)
runApp(shinyApp(ui, server)
)
install.packages("shinydashboardPlus")
server <- function(input, output, session){
# RIGHT MENU BAR CONTROLS -------------------------------------------------
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
updateTabItems(session, "sidebarID", selected = "hiddenCats")
}else if(input$sidebarItemExpanded == "dogs"){
updateTabItems(session, "sidebarID", selected = "hiddenDogs")
}
})
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
message("Cats view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar cat content
rightSidebarTabContent(
title = "Cat stuff",
id = "catStuff",
active = T,
icon = "cat",
p("Here is some information about cats.")
)
)
})
}else if(input$sidebarItemExpanded == "dogs"){
message("Dogs view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar dog content
rightSidebarTabContent(
title = "Dog stuff",
id = "dogStuff",
active = T,
icon = "dog",
p("Here is some information about dogs.")
)
)
})
}
})
}
ui <- tags$body(class = "skin-blue sidebar-mini control-sidebar-open", tagList(dashboardPagePlus(
header = dashboardHeaderPlus(
title = "Animals",
enable_rightsidebar = TRUE,
rightSidebarIcon = "paw"
),
body = dashboardBody(useShinyjs()),
rightsidebar = rightSidebar(
uiOutput("rightSidebar") # We'll define this dynamically using renderUI in the server
),
## Left sidebar
sidebar = dashboardSidebar(
sidebarMenu(
id = "sidebarID",
# Cats menu item
menuItem(expandedName = "cats", text = "Cats",
tabName = "cats", icon = icon("cat"),
startExpanded = TRUE,
class = "active",
h4("CAT CONTENT"),
selectInput("catSelector", label = "Select a cat",
choices = c("American Shorthair", "Ragdoll",
"Bengal", "Siamese", "Sphynx"))),
hidden(menuItem("hiddenCats", tabName = "hiddenCats")),
menuItem(expandedName = "dogs", text = "Dogs",
tabName = "dogs", icon = icon("dog"),
class = "active",
h4("DOG CONTENT"),
selectInput("dogSelector", label = "Select a dog",
choices = c("German Shepherd", "Poodle",
"Chihuahua", "Husky", "Pitbull"))),
hidden(menuItem("hiddenDogs", tabName = "hiddenDogs"))
)
)
),
)
)
server <- function(input, output, session){
# RIGHT MENU BAR CONTROLS -------------------------------------------------
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
updateTabItems(session, "sidebarID", selected = "hiddenCats")
}else if(input$sidebarItemExpanded == "dogs"){
updateTabItems(session, "sidebarID", selected = "hiddenDogs")
}
})
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
message("Cats view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar cat content
rightSidebarTabContent(
title = "Cat stuff",
id = "catStuff",
active = T,
icon = "cat",
p("Here is some information about cats.")
)
)
})
}else if(input$sidebarItemExpanded == "dogs"){
message("Dogs view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar dog content
rightSidebarTabContent(
title = "Dog stuff",
id = "dogStuff",
active = T,
icon = "dog",
p("Here is some information about dogs.")
)
)
})
}
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboardPlus)
library(shinyjs)
ui <- tags$body(class = "skin-blue sidebar-mini control-sidebar-open", tagList(dashboardPagePlus(
header = dashboardHeaderPlus(
title = "Animals",
enable_rightsidebar = TRUE,
rightSidebarIcon = "paw"
),
body = dashboardBody(useShinyjs()),
rightsidebar = rightSidebar(
uiOutput("rightSidebar") # We'll define this dynamically using renderUI in the server
),
## Left sidebar
sidebar = dashboardSidebar(
sidebarMenu(
id = "sidebarID",
# Cats menu item
menuItem(expandedName = "cats", text = "Cats",
tabName = "cats", icon = icon("cat"),
startExpanded = TRUE,
class = "active",
h4("CAT CONTENT"),
selectInput("catSelector", label = "Select a cat",
choices = c("American Shorthair", "Ragdoll",
"Bengal", "Siamese", "Sphynx"))),
hidden(menuItem("hiddenCats", tabName = "hiddenCats")),
menuItem(expandedName = "dogs", text = "Dogs",
tabName = "dogs", icon = icon("dog"),
class = "active",
h4("DOG CONTENT"),
selectInput("dogSelector", label = "Select a dog",
choices = c("German Shepherd", "Poodle",
"Chihuahua", "Husky", "Pitbull"))),
hidden(menuItem("hiddenDogs", tabName = "hiddenDogs"))
)
)
),
)
)
server <- function(input, output, session){
# RIGHT MENU BAR CONTROLS -------------------------------------------------
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
updateTabItems(session, "sidebarID", selected = "hiddenCats")
}else if(input$sidebarItemExpanded == "dogs"){
updateTabItems(session, "sidebarID", selected = "hiddenDogs")
}
})
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
message("Cats view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar cat content
rightSidebarTabContent(
title = "Cat stuff",
id = "catStuff",
active = T,
icon = "cat",
p("Here is some information about cats.")
)
)
})
}else if(input$sidebarItemExpanded == "dogs"){
message("Dogs view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar dog content
rightSidebarTabContent(
title = "Dog stuff",
id = "dogStuff",
active = T,
icon = "dog",
p("Here is some information about dogs.")
)
)
})
}
})
}
library(shiny)
library(shinydashboardPlus)
library(shinyjs)
ui <- tags$body(class = "skin-blue sidebar-mini control-sidebar-open", tagList(dashboardPagePlus(
header = dashboardHeaderPlus(
title = "Animals",
enable_rightsidebar = TRUE,
rightSidebarIcon = "paw"
),
body = dashboardBody(useShinyjs()),
rightsidebar = rightSidebar(
uiOutput("rightSidebar") # We'll define this dynamically using renderUI in the server
),
## Left sidebar
sidebar = dashboardSidebar(
sidebarMenu(
id = "sidebarID",
# Cats menu item
menuItem(expandedName = "cats", text = "Cats",
tabName = "cats", icon = icon("cat"),
startExpanded = TRUE,
class = "active",
h4("CAT CONTENT"),
selectInput("catSelector", label = "Select a cat",
choices = c("American Shorthair", "Ragdoll",
"Bengal", "Siamese", "Sphynx"))),
hidden(menuItem("hiddenCats", tabName = "hiddenCats")),
menuItem(expandedName = "dogs", text = "Dogs",
tabName = "dogs", icon = icon("dog"),
class = "active",
h4("DOG CONTENT"),
selectInput("dogSelector", label = "Select a dog",
choices = c("German Shepherd", "Poodle",
"Chihuahua", "Husky", "Pitbull"))),
hidden(menuItem("hiddenDogs", tabName = "hiddenDogs"))
)
)
),
)
)
library(shiny)
library(shinydashboardPlus)
library(shinyjs)
ui <- tags$body(class = "skin-blue sidebar-mini control-sidebar-open", tagList(dashboardPagePlus(
header = dashboardHeaderPlus(
title = "Animals",
enable_rightsidebar = TRUE,
rightSidebarIcon = "paw"
),
body = dashboardBody(useShinyjs()),
rightsidebar = rightSidebar(
uiOutput("rightSidebar") # We'll define this dynamically using renderUI in the server
),
## Left sidebar
sidebar = dashboardSidebar(
sidebarMenu(
id = "sidebarID",
# Cats menu item
menuItem(expandedName = "cats", text = "Cats",
tabName = "cats", icon = icon("cat"),
startExpanded = TRUE,
class = "active",
h4("CAT CONTENT"),
selectInput("catSelector", label = "Select a cat",
choices = c("American Shorthair", "Ragdoll",
"Bengal", "Siamese", "Sphynx"))),
hidden(menuItem("hiddenCats", tabName = "hiddenCats")),
menuItem(expandedName = "dogs", text = "Dogs",
tabName = "dogs", icon = icon("dog"),
class = "active",
h4("DOG CONTENT"),
selectInput("dogSelector", label = "Select a dog",
choices = c("German Shepherd", "Poodle",
"Chihuahua", "Husky", "Pitbull"))),
hidden(menuItem("hiddenDogs", tabName = "hiddenDogs"))
)
)
),
)
)
server <- function(input, output, session){
# RIGHT MENU BAR CONTROLS -------------------------------------------------
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
updateTabItems(session, "sidebarID", selected = "hiddenCats")
}else if(input$sidebarItemExpanded == "dogs"){
updateTabItems(session, "sidebarID", selected = "hiddenDogs")
}
})
observeEvent(input$sidebarItemExpanded, {
if(input$sidebarItemExpanded == "cats"){
message("Cats view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar cat content
rightSidebarTabContent(
title = "Cat stuff",
id = "catStuff",
active = T,
icon = "cat",
p("Here is some information about cats.")
)
)
})
}else if(input$sidebarItemExpanded == "dogs"){
message("Dogs view has been selected")
output$rightSidebar <- renderUI({
rightSidebar(
### Right sidebar dog content
rightSidebarTabContent(
title = "Dog stuff",
id = "dogStuff",
active = T,
icon = "dog",
p("Here is some information about dogs.")
)
)
})
}
})
}
runApp('Visual_EccDNA')
runApp('Visual_EccDNA')
