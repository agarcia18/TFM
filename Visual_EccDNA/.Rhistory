my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 3000000, 3000100))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.1, position = position_dodge(0.1))+
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 3000000, 3000100))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.1))+
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 3000000, 3000100))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.5))+
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 3000000, 3000100))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.8))+
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 3000000, 3000100))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.7))+
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)
circ <- as.data.frame(read.table("C:/Users/ainho/eccDNA/BED/SRR6315423_unknown_circle.bed",header = FALSE, sep="\t",stringsAsFactors=FALSE))
names(circ) <- c("chrom","start","end","discordant_reads","split_reads","score","coverage_mean","coverage_sd","coverage_start", "coverage_end","coverage_cont")
circ$size_bp <- circ$end - circ$start
circ$quality <- cut(circ$score,breaks=c(-Inf,10,50,200,Inf),labels= c("Bad","Low", "Medium", "Good"),right = FALSE)
View(circ)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 664053, 664181))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.7))+
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 664053, 664181))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.7))+
scale_fill_discrete(values=c("A"="red","T"="green","G"="yellow","C"="blue"))
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 664053, 664181))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.7))+
scale_fill_manual(values=c("A"="red","T"="green","G"="yellow","C"="blue"))
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 664053, 664181))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.2))+
scale_fill_manual(values=c("A"="red","T"="green","G"="yellow","C"="blue"))+
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 664053, 664181))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.2))+
scale_fill_manual(values=c("A"="#E74C3C","T"="#8ADF0F","G"="#F4D03F","C"="#1F618D"))+
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 664053, 664181))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.2))+
scale_fill_manual(values=c("A"="#E74C3C","T"="#8ADF0F","G"="#F4D03F","C"="#1F618D"))+
theme(legend.position="none")+
ylim(-100,50)+
coord_polar(start=0)+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 664053, 664181))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.2))+
scale_fill_manual(values=c("A"="#E74C3C","T"="#8ADF0F","G"="#F4D03F","C"="#1F618D"))+
ylim(-100,50)+
coord_polar(start=0)+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),legend.position="none")
View(circ)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- as.data.frame(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr2", 19206729, 19210302))
my.dnastring$position <- c(1:length(my.dnastring$x))
my.dnastring$value <- rep(50,length(my.dnastring$x))
my.dnastring
library(ggplot2)
ggplot(my.dnastring,aes(x=position,y=value,fill=x))+
geom_bar(stat="identity",width = 0.2, position = position_dodge(0.2))+
scale_fill_manual(values=c("A"="#E74C3C","T"="#8ADF0F","G"="#F4D03F","C"="#1F618D"))+
ylim(-100,50)+
coord_polar(start=0)+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),legend.position="none")
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "none")
# Create test data.
data <- data.frame(
category=c("A", "B", "C"),
count=c(10, 60, 30)
)
# Compute percentages
data$fraction <- data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax <- cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin <- c(0, head(data$ymax, n=-1))
# Compute label position
data$labelPosition <- (data$ymax + data$ymin) / 2
# Compute a good label
data$label <- paste0(data$category, "\n value: ", data$count)
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "none")
install.packages("usethis")
install.packages(c("bslib", "sass"))
devtools::document()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='agarcia18',
token='931ED152CDC49361415E74448D665357',
secret='rr7a0ZVjh2j2RDO7oAfiCRn2ZKnjgUP+P1Q0Fjpy')
library(rsconnect)
rsconnect::deployApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
bioc <- local({
env <- new.env()
on.exit(rm(env))
evalq(source("http://bioconductor.org/biocLite.R", local = TRUE), env)
biocinstallRepos()
})
bioc
bioc <- local({
env <- new.env()
on.exit(rm(env))
evalq(source("http://bioconductor.org/biocLite.R", local = TRUE), env)
biocinstallRepos()
})
bioc <- local({
env <- new.env()
on.exit(rm(env))
evalq(source("http://bioconductor.org/biocManager.R", local = TRUE), env)
biocinstallRepos()
})
bioc
local({
r <- getOption("repos")
r["CRAN"] <- "https://cran.rstudio.com/"
r["BioCsoft"] <- "https://bioconductor.org/packages/3.7/bioc"
r["BioCann"] <- "https://bioconductor.org/packages/3.7/data/annotation"
r["BioCexp"] <- "https://bioconductor.org/packages/3.7/data/experiment"
options(repos = r)
})
bioc <-local({
r <- getOption("repos")
r["CRAN"] <- "https://cran.rstudio.com/"
r["BioCsoft"] <- "https://bioconductor.org/packages/3.7/bioc"
r["BioCann"] <- "https://bioconductor.org/packages/3.7/data/annotation"
r["BioCexp"] <- "https://bioconductor.org/packages/3.7/data/experiment"
options(repos = r)
})
bioc
sessionInfo()
library(rsconnect)
rsconnect::deployApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
library(rsconnect)
rsconnect::deployApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
options('repos')
options('repos')
rsconnect::deployApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
rsconnect::deployApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
r["BioCexp"] <- "https://bioconductor.org/packages/3.12/data/experiment"
local({
r <- getOption("repos")
r["CRAN"] <- "https://cran.rstudio.com/"
r["BioCsoft"] <- "https://bioconductor.org/packages/3.12/bioc"
r["BioCann"] <- "https://bioconductor.org/packages/3.12/data/annotation"
r["BioCexp"] <- "https://bioconductor.org/packages/3.12/data/experiment"
options(repos = r)
})
rsconnect::deployApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
shiny::runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
View(active_genesets)
View(active_genesets)
runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
alphabetFrequency(my.dnastring)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "ch1", 18476969,18477000)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 18476969,18477000)
as.data.framealphabetFrequency(my.dnastring)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg19)
my.dnastring <- Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 18476969,18477000)
as.data.frame(alphabetFrequency(my.dnastring))
as.data.frame(alphabetFrequency(my.dnastring[1:4]))
as.data.frame(alphabetFrequency(my.dnastring)[1:4])
runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
local({
r <- getOption("repos")
r["CRAN"] <- "https://cran.rstudio.com/"
r["BioCsoft"] <- "https://bioconductor.org/packages/3.12/bioc"
r["BioCann"] <- "https://bioconductor.org/packages/3.12/data/annotation"
r["BioCexp"] <- "https://bioconductor.org/packages/3.12/data/experiment"
options(repos = r)
})
shiny::runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
rsconnect::showLogs()
rsconnect::showLogs()
paste0("Melanocit_1_1")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
if(!require(BiocManager)) install.packages("BiocManager")
if(!require(airway)) BiocManager::install("airway")
library("airway")
#to find out where on your computer the files from a package have been installed.
indir <- system.file("extdata", package="airway", mustWork=TRUE)
list.files(indir)
library("airway")
#to find out where on your computer the files from a package have been installed.
indir <- system.file("extdata", package="airway", mustWork=TRUE)
list.files(indir)
library("airway")
#to find out where on your computer the files from a package have been installed.
indir <- system.file("extdata", package="airway", mustWork=TRUE)
list.files(indir)
#read the targets file of the experiment
csvfile <- file.path(indir, "sample_table.csv")
sampleTable <- read.csv(csvfile, row.names = 1)
sampleTable
filenames <- file.path(indir, paste0(sampleTable$Run, "_subset.bam"))
file.exists(filenames)
filenames
filenames <- file.path(indir, paste0(sampleTable$Run, "_subset.bam"))
file.exists(filenames)
filenames
library("Rsamtools")
bamfiles <- BamFileList(filenames, yieldSize=2000000)
library("Rsamtools")
bamfiles <- BamFileList(filenames, yieldSize=2000000)
seqinfo(bamfiles[1])
library("GenomicFeatures")
gtffile <- file.path(indir,"Homo_sapiens.GRCh37.75_subset.gtf")
txdb <- makeTxDbFromGFF(gtffile, format = "gtf", circ_seqs = character())
txdb
library("GenomicAlignments")
library("BiocParallel")
register(SerialParam())
library("GenomicAlignments")
library("BiocParallel")
register(SerialParam())
se <- summarizeOverlaps(features=ebg, reads=bamfiles,
mode="Union",
singleEnd=FALSE,
ignore.strand=TRUE,
fragments=TRUE )
ebg <- exonsBy(txdb, by="gene")
ebg
se <- summarizeOverlaps(features=ebg, reads=bamfiles,
mode="Union",
singleEnd=FALSE,
ignore.strand=TRUE,
fragments=TRUE )
se
dim(se)
assayNames(se)
head(assay(se), 3)
colSums(assay(se))
library("GenomicAlignments")
library("BiocParallel")
register(SerialParam())
se <- summarizeOverlaps(features=ebg, reads=bamfiles,
mode="Union",
singleEnd=FALSE,
ignore.strand=TRUE,
fragments=TRUE )
se
dim(se)
assayNames(se)
head(assay(se), 3)
colSums(assay(se))
dds <- DESeq(dds, parallel =TRUE)
if(!require(BiocManager)) install.packages("BiocManager")
if(!require(airway)) BiocManager::install("airway")
if(!require(Rsamtools)) BiocManager::install("Rsamtools")
if(!require(GenomicFeatures)) BiocManager::install("GenomicFeatures")
if(!require(DESeq2)) BiocManager::install("DESeq2")
if(!require(apeglm)) BiocManager::install("apeglm")
if(!require(BiocParallel)) BiocManager::install("BiocParallel")
if(!require(genefilter)) BiocManager::install("genefilter")
if(!require(org.Hs.eg.db)) BiocManager::install("org.Hs.eg.db")
if(!require(AnnotationDbi)) BiocManager::install("AnnotationDbi")
if(!require(ReportingTools)) BiocManager::install("ReportingTools")
if(!require(RUVSeq)) BiocManager::install("RUVSeq")
if(!require(sva)) BiocManager::install("sva")
if(!require(Gviz)) BiocManager::install("Gviz")
if(!require(magrittr)) install.packages("magrittr", dep=TRUE)
if(!require(dplyr)) install.packages("dplyr", dep=TRUE)
if(!require(ggplot2)) install.packages("ggplot2", dep=TRUE)
if(!require(pheatmap)) install.packages("pheatmap", dep=TRUE)
if(!require(RColorBrewer)) install.packages("RColorBrewer", dep=TRUE)
if(!require(ggbeeswarm)) install.packages("ggbeeswarm", dep=TRUE)
library("DESeq2")
ddsSumExp <- `DESeqDataSet`(se, design = ~ cell + dex)
dds <- ddsSumExp
# dds <- ddsMat
dds <- DESeq(dds, parallel =TRUE)
data("airway")
se <- airway
#reorder the levels
se$dex %<>% relevel("untrt")
se$dex
data("airway")
se <- airway
#reorder the levels
se$dex %<>% relevel("untrt")
se$dex
round( colSums(assay(se)) / 1e6, 1 )
round( colSums(assay(se)) / 1e6, 1 )
colData(se)
library("DESeq2")
ddsSumExp <- `DESeqDataSet`(se, design = ~ cell + dex)
dds <- ddsSumExp
# dds <- ddsMat
nrow(dds)
dds <- dds[ rowSums(counts(dds)) > 1, ]
nrow(dds)
vsd <- vst(dds, blind = FALSE)
head(assay(vsd), 3)
colData(vsd)
dds <- DESeq(dds, parallel =TRUE)
res <- results(dds, contrast=c("dex","trt","untrt"))
res
topGene <- rownames(res)[which.min(res$padj)]
library("ggbeeswarm")
geneCounts <- plotCounts(dds, gene = topGene, intgroup = c("dex","cell"),
returnData = TRUE)
ggplot(geneCounts, aes(x = dex, y = count, color = cell, group = cell)) +
scale_y_log10() + geom_point(size = 3) + geom_line()
rownames(res)[which.min(res$padj)]
resGR <- results(dds, name="dex_trt_vs_untrt", format="GRanges")
resGR$log2FoldChange <- res$log2FoldChange
resGR
library("org.Hs.eg.db")
resGR$symbol <- mapIds(org.Hs.eg.db, names(resGR), "SYMBOL", "ENSEMBL")
library("Gviz")
window <- resGR[topGene] + 1e6
strand(window) <- "*"
resGRsub <- resGR[resGR %over% window]
naOrDup <- is.na(resGRsub$symbol) | duplicated(resGRsub$symbol)
resGRsub$group <- ifelse(naOrDup, names(resGRsub), resGRsub$symbol)
status <- factor(ifelse(resGRsub$padj < 0.1 & !is.na(resGRsub$padj), "sig", "notsig"))
resGR[topGene]
window <- resGR[topGene] + 1e6
strand(window) <- "*"
resGRsub <- resGR[resGR %over% window]
topGene <- rownames(res)[which.min(res$padj)]
resGR[resGR %over% window]
is.na(resGRsub$symbol) | duplicated(resGRsub$symbol)ç
is.na(resGRsub$symbol) | duplicated(resGRsub$symbol)
startdate<-as.Date("2020/02/28")
stopdate<-as.Date("2020/03/01")
stopdate-startdate
height <-c(1,2,3,4,5)
height(5)
matriz <-as.matrix(c(1,2,3
1,2,3))
matriz <-as.matrix(c(1,2,3,
1,2,3))
View(matriz)
matriz <-as.matrix(c(1,2,3,
1,2,3)nrow=2)
matriz <-as.matrix(c(1,2,3,
1,2,3)nrow=2)
matriz <-as.matrix(c(1,2,3,
1,2,3),nrow=2)
View(matriz)
matriz <-as.matrix(c(1,2,3,
1,2,3),nrow=2)
matriz <-as.matrix(c(1,2,3),
c(1,2,3),nrow=2)
View(matriz)
matriz <-as.matrix(c(1,2,3,1,2,3),nrow=2,ncol=3)
matriz <-as.matrix(c(1,2,3,1,2,3),nrow=2,ncol=3)
matriz <-matrix(c(1,2,3,1,2,3),nrow=2,ncol=3)
mat <-matrix(c(1,2,3,1,2,3),nrow=2,ncol=3)
View(mat)
mat * mat
getws())
getws()
LS()
ls()
nownum(mat)
rownum(mat)
!is.na(mat)
remove(matriz)
Renviron.site
Rdefault.site
Rdefaults.site
mat[3,]
mat[2,]
?airway
??airway
shiny::runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
runApp('C:/Users/ainho/eccDNA/Visual_EccDNA')
install.packages("devtools")
install.packages("roxygen2")
install.packages("usethis")
usethis::create_package("C:/Users/ainho/VisualEccDNA")
usethis::use_git()
devtools::check()
install.packages("packrat")
packrat::init()
setwd("C:/Users/ainho/eccDNA/Visual_EccDNA")
packrat::init()
devtools::install_github("mangothecat/shinyAppDemo")
shinyAppDemo::launchApp()
devtools::install_github("mangothecat/shinyAppDemo")
setwd("C:/Users/ainho/eccDNA/Visual_EccDNA")
shiny::runApp()
runApp()
